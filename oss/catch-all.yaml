---
apiVersion: traefik.io/v1alpha1
kind: ServersTransport
metadata:
  name: oss-transport
  namespace: traefik
  annotations:
    kubernetes.io/ingress.class: front-layer
spec:
  insecureSkipVerify: true
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: catchall
  namespace: traefik
  annotations:
    kubernetes.io/ingress.class: front-layer
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: HostRegexp(`^.+\.${CLUSTERNAME}\.${DOMAINNAME}`)
      priority: 1
      services:
        - kind: Service
          name: traefik
          port: 443
          scheme: https
          serversTransport: oss-transport
      middlewares:
        - name: cors
  tls: {}
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: catchall-portal
  namespace: traefik
  annotations:
    kubernetes.io/ingress.class: front-layer
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`portal.${CLUSTERNAME}.${DOMAINNAME}`)
      priority: 1
      services:
        - kind: Service
          name: apiportal
          port: 9903
          scheme: https
          serversTransport: oss-transport
      middlewares:
        - name: cors
  tls: {}
# ---
# apiVersion: traefik.io/v1alpha1
# kind: IngressRouteTCP
# metadata:
#   name: catchall-cert
#   namespace: traefik
#   annotations:
#     kubernetes.io/ingress.class: front-layer
# spec:
#   entryPoints:
#     - web
#   routes:
#     - match: HostSNI(`*`)
#       priority: 1
#       services:
#         - name: traefik
#           port: 80

---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: cors
  namespace: traefik
spec:
  headers:
    accessControlAllowCredentials: true
    accessControlAllowMethods:
      - GET
      - HEAD
      - POST
      - PUT
      - PATCH
      - DELETE
      - CONNECT
      - OPTIONS
    accessControlAllowOriginList:
      - "*"
    accessControlMaxAge: 0
    accessControlAllowHeaders:
      - "*"